<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2021-05-13T15:26:55+08:00</updated><id>/feed.xml</id><title type="html">Your awesome title</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Welcome to Jekyll!</title><link href="/jekyll/update/2021/05/13/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2021-05-13T15:14:13+08:00</published><updated>2021-05-13T15:14:13+08:00</updated><id>/jekyll/update/2021/05/13/welcome-to-jekyll</id><content type="html" xml:base="/jekyll/update/2021/05/13/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MONTH&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">Jekyll+Github搭建个人博客</title><link href="/original/2021/05/13/Atlas200%E9%AA%8C%E6%94%B6%E6%8A%A5%E5%91%8A.html" rel="alternate" type="text/html" title="Jekyll+Github搭建个人博客" /><published>2021-05-13T00:00:00+08:00</published><updated>2021-05-13T00:00:00+08:00</updated><id>/original/2021/05/13/Atlas200%E9%AA%8C%E6%94%B6%E6%8A%A5%E5%91%8A</id><content type="html" xml:base="/original/2021/05/13/Atlas200%E9%AA%8C%E6%94%B6%E6%8A%A5%E5%91%8A.html">&lt;h2 id=&quot;atlas200验收报告&quot;&gt;Atlas200验收报告&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;在线支持&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.huaweicloud.com/ascend/home.html&quot;&gt;晟腾学院&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://support.huaweicloud.com/twp-atlas200dkappc32/atlasug_02_0003.html&quot;&gt;Atlas 200 DK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;性能特点&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;可提供16TOPS (INT8) 的峰值计算能力。&lt;/li&gt;
  &lt;li&gt;支持两路Camera输入，两路ISP图像处理，支持HDR10高动态范围技术标准&lt;/li&gt;
  &lt;li&gt;支持1000M以太网对外提供高速网络连接，匹配强劲计算能力&lt;/li&gt;
  &lt;li&gt;通用的40-pin扩展接口，方便产品原型设计&lt;/li&gt;
  &lt;li&gt;支持5v~28v宽范围直流电源输入&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;需要配件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;micro sd卡 32G&lt;/li&gt;
  &lt;li&gt;typeC usb 线&lt;/li&gt;
  &lt;li&gt;网线&lt;/li&gt;
  &lt;li&gt;读卡器&lt;/li&gt;
  &lt;li&gt;Ubuntu服务器&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;制作Usb系统启动盘&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;将SD卡放入读卡器，将读卡器与Ubuntu服务器的USB连接，然后通过制卡脚本进行SD卡的制作&lt;/li&gt;
  &lt;li&gt;软件包准备
    &lt;ul&gt;
      &lt;li&gt;制卡入口脚本  &lt;a href=&quot;https://www.huaweicloud.com/ascend/resource/Software&quot;&gt;make_sd_card.py&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;制作SD卡操作系统脚本 &lt;a href=&quot;https://www.huaweicloud.com/ascend/resource/Software&quot;&gt;make_ubuntu_sd.sh&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;请选择配套的CANN版本：20.1。&lt;/li&gt;
          &lt;li&gt;“产品系列”请选择“Atlas 200 DK”。&lt;/li&gt;
          &lt;li&gt;“产品型号”请选择“Atlas 200 DK 开发者套件”。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://releases.ubuntu.com/releases/&quot;&gt;Ubuntu操作系统镜像包&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;ubuntu-18.04.xx-server-arm64.iso&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.huaweicloud.com/ascend/resource/Software&quot;&gt;开发者板驱动包&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;A200dk-npu-driver-{software version}-ubuntu18.04-aarch64-minirc.tar.gz&lt;/li&gt;
          &lt;li&gt;请选择配套的CANN版本：20.1。&lt;/li&gt;
          &lt;li&gt;“产品系列”请选择“Atlas 200 DK”。&lt;/li&gt;
          &lt;li&gt;“产品型号”请选择“Atlas 200 DK 开发者套件”。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.huaweicloud.com/ascend/cann-download&quot;&gt;开发者板运行包&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;Ascend-cann-minirc_{software version}_ubuntu18.04-aarch64.zip&lt;/li&gt;
          &lt;li&gt;请从“CANN软件包”中选择对应版本的软件包下载。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;操作步骤&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;请将SD卡放入读卡器，并将读卡器与Ubuntu服务器的USB接口连接。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt-get install qemu-user-static binfmt-support python3-yaml gcc-aarch64-linux-gnu g++-aarch64-linux-gnu&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;把准备好的文件包放在/home/username/mksd目录下，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd /home/username/mksd&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fdisk -l&lt;/code&gt;查看sd卡所在usb设备名称为“/dev/sda”，可通过插拔SD卡的方式确定设备名称。&lt;/li&gt;
  &lt;li&gt;运行SD制卡脚本“make_sd_card.py”。
    &lt;ol&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python3 make_sd_card.py local /dev/sda&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;“local”表示使用本地方式制作SD卡。&lt;/li&gt;
      &lt;li&gt;“/dev/sda”为SD卡所在的USB设备名称。&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;遇到问题&lt;/strong&gt;：制作sd卡不成功，经过反复协助华为方技术人员，发现华为官方提供的脚本文件&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make_ubuntu_sd.sh&lt;/code&gt;有bug。使用体验差。华为方解决问题周期长，这个问题用了两天才解决。后期应用过程中华为atlas平台也会存在一些bug，开发速度受限于华为方解决atlas产品bug的速度。遇到Atlas平台问题，只能在华为云论坛上进行提问，解决问题周期长。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;获得修正后的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make_ubuntu_sd.sh&lt;/code&gt;脚本文件安装成功。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Atlas200 开机启动成功，进入系统。&lt;br /&gt;
&lt;strong&gt;进行服务器ip设置&lt;/strong&gt;：&lt;br /&gt;
ip:192.168.0.3&lt;br /&gt;
netmask:255.255.0.0&lt;br /&gt;
gateway:192.168.0.1&lt;br /&gt;
&lt;strong&gt;ssh登入Atlas200&lt;/strong&gt;:&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh HwHiAiUser@192.168.0.2&lt;/code&gt;&lt;br /&gt;
密码:&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mind@123&lt;/code&gt;\&lt;/p&gt;</content><author><name></name></author><category term="original" /><summary type="html">Atlas200验收报告 在线支持 晟腾学院 Atlas 200 DK</summary></entry></feed>